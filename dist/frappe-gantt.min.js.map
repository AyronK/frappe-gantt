{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst SHORTENED = {\n    January: 'Jan',\n    February: 'Feb',\n    March: 'Mar',\n    April: 'Apr',\n    May: 'May',\n    June: 'Jun',\n    July: 'Jul',\n    August: 'Aug',\n    September: 'Sep',\n    October: 'Oct',\n    November: 'Nov',\n    December: 'Dec',\n};\n\nexport default {\n    parse_duration(duration) {\n        const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n        const matches = regex.exec(duration);\n\n        if (matches !== null) {\n            if (matches[2] === 'y') {\n                return { duration: parseInt(matches[1]), scale: `year` };\n            } else if (matches[2] === 'm') {\n                return { duration: parseInt(matches[1]), scale: `month` };\n            } else if (matches[2] === 'd') {\n                return { duration: parseInt(matches[1]), scale: `day` };\n            } else if (matches[2] === 'h') {\n                return { duration: parseInt(matches[1]), scale: `hour` };\n            } else if (matches[2] === 'min') {\n                return { duration: parseInt(matches[1]), scale: `minute` };\n            } else if (matches[2] === 's') {\n                return { duration: parseInt(matches[1]), scale: `second` };\n            } else if (matches[2] === 'ms') {\n                return { duration: parseInt(matches[1]), scale: `millisecond` };\n            }\n        }\n    },\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length === 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n            month: 'long',\n        });\n        const month_name = dateTimeFormat.format(date);\n        const month_name_capitalized =\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_name_capitalized,\n            MMM: SHORTENED[month_name_capitalized],\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replaceAll(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replaceAll(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale],\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else if (attr === 'clipPath') {\n            elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s',\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.image_size = this.height - 5;\n        this.compute_x();\n        this.compute_y();\n        this.compute_duration();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class:\n                'bar-wrapper' +\n                (this.task.custom_class ? ' ' + this.task.custom_class : '') +\n                (this.task.important ? ' important' : ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    prepare_expected_progress_values() {\n        this.compute_expected_progress();\n        this.expected_progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.expected_progress / 100) || 0;\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        if (this.gantt.options.show_expected_progress) {\n            this.prepare_expected_progress_values();\n            this.draw_expected_progress_bar();\n        }\n        this.draw_label();\n        this.draw_resize_handles();\n\n        if (this.task.thumbnail) {\n            this.draw_thumbnail();\n        }\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_expected_progress_bar() {\n        if (this.invalid) return;\n        this.$expected_bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.expected_progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-expected-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(\n            this.$expected_bar_progress,\n            'width',\n            0,\n            this.expected_progress_width,\n        );\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n        const x =\n            (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n                this.gantt.options.step) *\n            this.gantt.options.column_width;\n\n        let $date_highlight = document.createElement('div');\n        $date_highlight.id = `${this.task.id}-highlight`;\n        $date_highlight.classList.add('date-highlight');\n        $date_highlight.style.height = this.height * 0.8 + 'px';\n        $date_highlight.style.width = this.width + 'px';\n        $date_highlight.style.top =\n            this.gantt.options.header_height - 25 + 'px';\n        $date_highlight.style.left = x + 'px';\n        this.$date_highlight = $date_highlight;\n        this.gantt.$lower_header.prepend($date_highlight);\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        let x_coord = this.x + this.$bar.getWidth() / 2;\n\n        if (this.task.thumbnail) {\n            x_coord = this.x + this.image_size + 5;\n        }\n\n        createSVG('text', {\n            x: x_coord,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n    draw_thumbnail() {\n        let x_offset = 10,\n            y_offset = 2;\n        let defs, clipPath;\n\n        defs = createSVG('defs', {\n            append_to: this.bar_group,\n        });\n\n        createSVG('rect', {\n            id: 'rect_' + this.task.id,\n            x: this.x + x_offset,\n            y: this.y + y_offset,\n            width: this.image_size,\n            height: this.image_size,\n            rx: '15',\n            class: 'img_mask',\n            append_to: defs,\n        });\n\n        clipPath = createSVG('clipPath', {\n            id: 'clip_' + this.task.id,\n            append_to: defs,\n        });\n\n        createSVG('use', {\n            href: '#rect_' + this.task.id,\n            append_to: clipPath,\n        });\n\n        createSVG('image', {\n            x: this.x + x_offset,\n            y: this.y + y_offset,\n            width: this.image_size,\n            height: this.image_size,\n            class: 'bar-img',\n            href: this.task.thumbnail,\n            clipPath: 'clip_' + this.task.id,\n            append_to: this.bar_group,\n        });\n    }\n\n    draw_resize_handles() {\n        if (this.invalid || this.gantt.options.readonly) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() + handle_width - 4,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group,\n        });\n\n        createSVG('rect', {\n            x: bar.getX() - handle_width - 4,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group,\n        });\n\n        this.$handle_progress = createSVG('polygon', {\n            points: this.get_progress_polygon_points().join(','),\n            class: 'handle progress',\n            append_to: this.handle_group,\n        });\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        let icon_width = 10;\n        let icon_height = 15;\n\n        return [\n            bar_progress.getEndX() - icon_width / 2,\n            bar_progress.getY() + bar_progress.getHeight() / 2,\n\n            bar_progress.getEndX(),\n            bar_progress.getY() +\n                bar_progress.getHeight() / 2 -\n                icon_height / 2,\n\n            bar_progress.getEndX() + icon_width / 2,\n            bar_progress.getY() + bar_progress.getHeight() / 2,\n\n            bar_progress.getEndX(),\n            bar_progress.getY() +\n                bar_progress.getHeight() / 2 +\n                icon_height / 2,\n\n            bar_progress.getEndX() - icon_width / 2,\n            bar_progress.getY() + bar_progress.getHeight() / 2,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        let task_id = this.task.id;\n        $.on(this.group, 'mouseover', (e) => {\n            this.gantt.trigger_event('hover', [\n                this.task,\n                e.screenX,\n                e.screenY,\n                e,\n            ]);\n        });\n\n        let timeout;\n        $.on(\n            this.group,\n            'mouseenter',\n            (e) =>\n                (timeout = setTimeout(() => {\n                    this.show_popup(e.offsetX);\n                    document.querySelector(\n                        `#${task_id}-highlight`,\n                    ).style.display = 'block';\n                }, 200)),\n        );\n\n        $.on(this.group, 'mouseleave', () => {\n            clearTimeout(timeout);\n            this.gantt.popup?.hide?.();\n            document.querySelector(`#${task_id}-highlight`).style.display =\n                'none';\n        });\n\n        $.on(this.group, this.gantt.options.popup_trigger, () => {\n            this.gantt.trigger_event('click', [this.task]);\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('double_click', [this.task]);\n        });\n    }\n\n    show_popup(x) {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language,\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language,\n        );\n        const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n        this.gantt.show_popup({\n            x,\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((_, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n            this.$date_highlight.style.left = x + 'px';\n        }\n        if (width) {\n            this.update_attr(bar, 'width', width);\n            this.$date_highlight.style.width = width + 'px';\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        if (this.gantt.options.show_expected_progress) {\n            this.date_changed();\n            this.compute_duration();\n            this.update_expected_progressbar_position();\n        }\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    update_label_position_on_horizontal_scroll({ x, sx }) {\n        const container = document.querySelector('.gantt-container');\n        const label = this.group.querySelector('.bar-label');\n        const img = this.group.querySelector('.bar-img') || '';\n        const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n        let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n        let newLabelX = label.getX() + x;\n        let newImgX = (img && img.getX() + x) || 0;\n        let imgWidth = (img && img.getBBox().width + 7) || 7;\n        let labelEndX = newLabelX + label.getBBox().width + 7;\n        let viewportCentral = sx + container.clientWidth / 2;\n\n        if (label.classList.contains('big')) return;\n\n        if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n            label.setAttribute('x', newLabelX);\n            if (img) {\n                img.setAttribute('x', newImgX);\n                img_mask.setAttribute('x', newImgX);\n            }\n        } else if (\n            newLabelX - imgWidth > this.$bar.getX() &&\n            x < 0 &&\n            labelEndX > viewportCentral\n        ) {\n            label.setAttribute('x', newLabelX);\n            if (img) {\n                img.setAttribute('x', newImgX);\n                img_mask.setAttribute('x', newImgX);\n            }\n        }\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour',\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour',\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_expected_progress() {\n        this.expected_progress =\n            date_utils.diff(date_utils.today(), this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.expected_progress =\n            ((this.expected_progress < this.duration\n                ? this.expected_progress\n                : this.duration) *\n                100) /\n            this.duration;\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        this.x = x;\n    }\n\n    compute_y() {\n        this.y =\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding);\n    }\n\n    compute_duration() {\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_expected_progressbar_position() {\n        if (this.invalid) return;\n        this.$expected_bar_progress.setAttribute('x', this.$bar.getX());\n        this.compute_expected_progress();\n        this.$expected_bar_progress.setAttribute(\n            'width',\n            this.gantt.options.column_width *\n                this.duration *\n                (this.expected_progress / 100) || 0,\n        );\n    }\n\n    update_progressbar_position() {\n        if (this.invalid || this.gantt.options.readonly) return;\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100),\n        );\n    }\n\n    update_label_position() {\n        const img_mask = this.bar_group.querySelector('.img_mask') || '';\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label'),\n            img = this.group.querySelector('.bar-img');\n\n        let padding = 5;\n        let x_offset_label_img = this.image_size + 10;\n        const labelWidth = label.getBBox().width;\n        const barWidth = bar.getWidth();\n        if (labelWidth > barWidth) {\n            label.classList.add('big');\n            if (img) {\n                img.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n                img_mask.setAttribute(\n                    'x',\n                    bar.getX() + bar.getWidth() + padding,\n                );\n                label.setAttribute(\n                    'x',\n                    bar.getX() + bar.getWidth() + x_offset_label_img,\n                );\n            } else {\n                label.setAttribute('x', bar.getX() + bar.getWidth() + padding);\n            }\n        } else {\n            label.classList.remove('big');\n            if (img) {\n                img.setAttribute('x', bar.getX() + padding);\n                img_mask.setAttribute('x', bar.getX() + padding);\n                label.setAttribute(\n                    'x',\n                    bar.getX() + barWidth / 2 + x_offset_label_img,\n                );\n            } else {\n                label.setAttribute(\n                    'x',\n                    bar.getX() + barWidth / 2 - labelWidth / 2,\n                );\n            }\n        }\n    }\n\n    update_handle_position() {\n        if (this.invalid || this.gantt.options.readonly) return;\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() - 12);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() + 4);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    let getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x =\n            this.to_task.$bar.getX() - this.gantt.options.padding / 2 - 7;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        this.parent.style.left = options.x - this.parent.clientWidth / 2 + 'px';\n        this.parent.style.top =\n            position_meta.y + position_meta.height + 10 + 'px';\n\n        this.pointer.style.left = this.parent.clientWidth / 2 + 'px';\n        this.pointer.style.top = '-15px';\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    HOUR: 'Hour',\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nconst VIEW_MODE_PADDING = {\n    HOUR: ['7d', '7d'],\n    QUARTER_DAY: ['7d', '7d'],\n    HALF_DAY: ['7d', '7d'],\n    DAY: ['1m', '1m'],\n    WEEK: ['1m', '1m'],\n    MONTH: ['1m', '1m'],\n    YEAR: ['2y', '2y'],\n};\n\nconst DEFAULT_OPTIONS = {\n    header_height: 65,\n    column_width: 30,\n    step: 24,\n    view_modes: [...Object.values(VIEW_MODE)],\n    bar_height: 30,\n    bar_corner_radius: 3,\n    arrow_curve: 5,\n    padding: 18,\n    view_mode: 'Day',\n    date_format: 'YYYY-MM-DD',\n    popup_trigger: 'click',\n    show_expected_progress: false,\n    popup: null,\n    language: 'en',\n    readonly: false,\n    highlight_weekend: true,\n    scroll_to: 'start',\n    lines: 'both',\n    auto_move_label: true,\n    today_button: true,\n    view_mode_select: false,\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.$popup_wrapper = document.createElement('div');\n        this.$popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.$popup_wrapper);\n    }\n\n    setup_options(options) {\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        if (!options.view_mode_padding) options.view_mode_padding = {};\n        for (let [key, value] of Object.entries(options.view_mode_padding)) {\n            if (typeof value === 'string') {\n                // Configure for single value given\n                options.view_mode_padding[key] = [value, value];\n            }\n        }\n\n        this.options.view_mode_padding = {\n            ...VIEW_MODE_PADDING,\n            ...options.view_mode_padding,\n        };\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            if (task.end === undefined && task.duration !== undefined) {\n                task.end = task._start;\n                let durations = task.duration.split(' ');\n\n                durations.forEach((tmpDuration) => {\n                    let { duration, scale } =\n                        date_utils.parse_duration(tmpDuration);\n                    task.end = date_utils.add(task.end, duration, scale);\n                });\n            }\n            task._end = date_utils.parse(task.end);\n            let diff = date_utils.diff(task._end, task._start, 'year');\n            if (diff < 0) {\n                throw Error(\n                    \"start of task can't be after end of task: in task #, \" +\n                        (i + 1),\n                );\n            }\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim().replaceAll(' ', '_'))\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            } else if (typeof task.id === 'string') {\n                task.id = task.id.replaceAll(' ', '_');\n            } else {\n                task.id = `${task.id}`;\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n        if (view_mode === VIEW_MODE.HOUR) {\n            this.options.step = 24 / 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n        let gantt_start, gantt_end;\n        if (!this.gantt_start) gantt_start = new Date();\n        else gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        if (!this.gantt_end) gantt_end = new Date();\n        else gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        let viewKey;\n        for (let [key, value] of Object.entries(VIEW_MODE)) {\n            if (value === this.options.view_mode) {\n                viewKey = key;\n            }\n        }\n        const [padding_start, padding_end] = this.options.view_mode_padding[\n            viewKey\n        ].map(date_utils.parse_duration);\n        gantt_start = date_utils.add(\n            gantt_start,\n            -padding_start.duration,\n            padding_start.scale,\n        );\n\n        let format_string;\n        if (this.view_is(VIEW_MODE.YEAR)) {\n            format_string = 'YYYY';\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            format_string = 'YYYY-MM';\n        } else if (this.view_is(VIEW_MODE.DAY)) {\n            format_string = 'YYYY-MM-DD';\n        } else {\n            format_string = 'YYYY-MM-DD HH';\n        }\n        this.gantt_start = date_utils.parse(\n            date_utils.format(gantt_start, format_string),\n        );\n        this.gantt_start.setHours(0, 0, 0, 0);\n        this.gantt_end = date_utils.add(\n            gantt_end,\n            padding_end.duration,\n            padding_end.scale,\n        );\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour',\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        if (this.options.readonly) return;\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_grid_extras();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position(this.options.scroll_to);\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n    }\n\n    make_grid_extras() {\n        this.make_grid_highlights();\n        this.make_grid_ticks();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.$svg,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let _ of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n            if (\n                this.options.lines === 'both' ||\n                this.options.lines === 'horizontal'\n            ) {\n            }\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const curHeader = document.querySelector('.grid-header');\n\n        let $header = document.createElement('div');\n        $header.style.height = this.options.header_height + 10 + 'px';\n        $header.style.width =\n            this.dates.length * this.options.column_width + 'px';\n        $header.classList.add('grid-header');\n        this.$header = $header;\n        this.$container.appendChild($header);\n\n        let $upper_header = document.createElement('div');\n        $upper_header.classList.add('upper-header');\n        this.$upper_header = $upper_header;\n        this.$header.appendChild($upper_header);\n\n        let $lower_header = document.createElement('div');\n        $lower_header.classList.add('lower-header');\n        this.$lower_header = $lower_header;\n        this.$header.appendChild($lower_header);\n\n        this.make_side_header();\n    }\n\n    make_side_header() {\n        let $side_header = document.createElement('div');\n        $side_header.classList.add('side-header');\n\n        // Create view mode change select\n        if (this.options.view_mode_select) {\n            const $select = document.createElement('select');\n            $select.classList.add('viewmode-select');\n\n            const $el = document.createElement('option');\n            $el.selected = true;\n            $el.disabled = true;\n            $el.textContent = 'Mode';\n            $select.appendChild($el);\n\n            for (const key in VIEW_MODE) {\n                const $option = document.createElement('option');\n                $option.value = VIEW_MODE[key];\n                $option.textContent = VIEW_MODE[key];\n                $select.appendChild($option);\n            }\n            // $select.value = this.options.view_mode\n            $select.addEventListener(\n                'change',\n                function () {\n                    this.change_view_mode($select.value);\n                }.bind(this),\n            );\n            $side_header.appendChild($select);\n        }\n\n        // Create today button\n        if (this.options.today_button) {\n            let $today_button = document.createElement('button');\n            $today_button.classList.add('today-button');\n            $today_button.textContent = 'Today';\n            $today_button.onclick = this.scroll_today.bind(this);\n            $side_header.appendChild($today_button);\n        }\n\n        this.$header.appendChild($side_header);\n        const { left, y } = this.$header.getBoundingClientRect();\n        const width = Math.min(\n            this.$header.clientWidth,\n            this.$container.clientWidth,\n        );\n        $side_header.style.left =\n            left +\n            this.$container.scrollLeft +\n            width -\n            $side_header.clientWidth +\n            'px';\n        $side_header.style.top = y + 10 + 'px';\n    }\n\n    make_grid_ticks() {\n        if (!['both', 'vertical', 'horizontal'].includes(this.options.lines))\n            return;\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        let $lines_layer = createSVG('g', {\n            class: 'lines_layer',\n            append_to: this.layers.grid,\n        });\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n        if (this.options.lines !== 'vertical') {\n            for (let _ of this.tasks) {\n                createSVG('line', {\n                    x1: 0,\n                    y1: row_y + row_height,\n                    x2: row_width,\n                    y2: row_y + row_height,\n                    class: 'row-line',\n                    append_to: $lines_layer,\n                });\n                row_y += row_height;\n            }\n        }\n        if (this.options.lines === 'horizontal') return;\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    highlightWeekends() {\n        if (!this.view_is('Day') && !this.view_is('Half Day')) return;\n        for (\n            let d = new Date(this.gantt_start);\n            d <= this.gantt_end;\n            d.setDate(d.getDate() + 1)\n        ) {\n            if (d.getDay() === 0 || d.getDay() === 6) {\n                const x =\n                    (date_utils.diff(d, this.gantt_start, 'hour') /\n                        this.options.step) *\n                    this.options.column_width;\n                const height =\n                    (this.options.bar_height + this.options.padding) *\n                    this.tasks.length;\n                createSVG('rect', {\n                    x,\n                    y: this.options.header_height + this.options.padding / 2,\n                    width:\n                        (this.view_is('Day') ? 1 : 2) *\n                        this.options.column_width,\n                    height,\n                    class: 'holiday-highlight',\n                    append_to: this.layers.grid,\n                });\n            }\n        }\n    }\n\n    //compute the horizontal x distance\n    computeGridHighlightDimensions(view_mode) {\n        let x = this.options.column_width / 2;\n\n        if (this.view_is(VIEW_MODE.DAY)) {\n            let today = date_utils.today();\n            return {\n                x:\n                    x +\n                    (date_utils.diff(today, this.gantt_start, 'hour') /\n                        this.options.step) *\n                        this.options.column_width,\n                date: today,\n            };\n        }\n\n        for (let date of this.dates) {\n            const todayDate = new Date();\n            const startDate = new Date(date);\n            const endDate = new Date(date);\n            switch (view_mode) {\n                case VIEW_MODE.WEEK:\n                    endDate.setDate(date.getDate() + 7);\n                    break;\n                case VIEW_MODE.MONTH:\n                    endDate.setMonth(date.getMonth() + 1);\n                    break;\n                case VIEW_MODE.YEAR:\n                    endDate.setFullYear(date.getFullYear() + 1);\n                    break;\n            }\n            if (todayDate >= startDate && todayDate <= endDate) {\n                return { x, date: startDate };\n            } else {\n                x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        if (this.options.highlight_weekend) this.highlightWeekends();\n        // highlight today's | week's | month's | year's\n        if (\n            this.view_is(VIEW_MODE.DAY) ||\n            this.view_is(VIEW_MODE.WEEK) ||\n            this.view_is(VIEW_MODE.MONTH) ||\n            this.view_is(VIEW_MODE.YEAR)\n        ) {\n            // Used as we must find the _end_ of session if view is not Day\n            const { x: left, date } = this.computeGridHighlightDimensions(\n                this.options.view_mode,\n            );\n            const top = this.options.header_height + this.options.padding / 2;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n            this.$current_highlight = this.create_el({\n                top,\n                left,\n                height,\n                classes: 'current-highlight',\n                append_to: this.$container,\n            });\n            let $today = document.getElementById(\n                date_utils.format(date).replaceAll(' ', '_'),\n            );\n\n            $today.classList.add('current-date-highlight');\n            $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px';\n            $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px';\n        }\n    }\n\n    create_el({ left, top, width, height, id, classes, append_to }) {\n        let $el = document.createElement('div');\n        $el.classList.add(classes);\n        $el.style.top = top + 'px';\n        $el.style.left = left + 'px';\n        if (id) $el.id = id;\n        if (width) $el.style.width = height + 'px';\n        if (height) $el.style.height = height + 'px';\n        append_to.appendChild($el);\n        return $el;\n    }\n\n    make_dates() {\n        this.upper_texts_x = {};\n        this.get_dates_to_draw().forEach((date, i) => {\n            let $lower_text = this.create_el({\n                left: date.lower_x,\n                top: date.lower_y,\n                id: date.formatted_date,\n                classes: 'lower-text',\n                append_to: this.$lower_header,\n            });\n            $lower_text.innerText = date.lower_text;\n            $lower_text.style.left =\n                +$lower_text.style.left.slice(0, -2) -\n                $lower_text.clientWidth / 2 +\n                'px';\n\n            if (date.upper_text) {\n                this.upper_texts_x[date.upper_text] = date.upper_x;\n                let $upper_text = document.createElement('div');\n                $upper_text.classList.add('upper-text');\n                $upper_text.style.left = date.upper_x + 'px';\n                $upper_text.style.top = date.upper_y + 'px';\n                $upper_text.innerText = date.upper_text;\n                this.$upper_header.appendChild($upper_text);\n\n                // remove out-of-bound dates\n                if (date.upper_x > this.layers.grid.getBBox().width) {\n                    $upper_text.remove();\n                }\n            }\n        });\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = d;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date_info) {\n        let last_date = last_date_info\n            ? last_date_info.date\n            : date_utils.add(date, 1, 'day');\n        const date_text = {\n            Hour_lower: date_utils.format(date, 'HH', this.options.language),\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language,\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language,\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            Hour_upper:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMMM', this.options.language)\n                    : '',\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language,\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth() || !last_date_info\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n        let column_width = this.view_is(VIEW_MODE.MONTH)\n            ? (date_utils.get_days_in_month(date) * this.options.column_width) /\n              30\n            : this.options.column_width;\n        const base_pos = {\n            x: last_date_info\n                ? last_date_info.base_pos_x + last_date_info.column_width\n                : 0,\n            lower_y: this.options.header_height - 20,\n            upper_y: this.options.header_height - 50,\n        };\n        const x_pos = {\n            Hour_lower: column_width / 2,\n            Hour_upper: column_width * 12,\n            'Quarter Day_lower': column_width / 2,\n            'Quarter Day_upper': column_width * 2,\n            'Half Day_lower': column_width / 2,\n            'Half Day_upper': column_width,\n            Day_lower: column_width / 2,\n            Day_upper: column_width / 2,\n            Week_lower: column_width / 2,\n            Week_upper: (column_width * 4) / 2,\n            Month_lower: column_width / 2,\n            Month_upper: column_width / 2,\n            Year_lower: column_width / 2,\n            Year_upper: (column_width * 30) / 2,\n        };\n        return {\n            date,\n            formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n            column_width,\n            base_pos_x: base_pos.x,\n            upper_text: this.options.lower_text\n                ? this.options.upper_text(\n                      date,\n                      this.options.view_mode,\n                      date_text[`${this.options.view_mode}_upper`],\n                  )\n                : date_text[`${this.options.view_mode}_upper`],\n            lower_text: this.options.lower_text\n                ? this.options.lower_text(\n                      date,\n                      this.options.view_mode,\n                      date_text[`${this.options.view_mode}_lower`],\n                  )\n                : date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index], // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg.querySelector('.grid .grid-row')\n            ? this.$svg.querySelector('.grid .grid-row').getAttribute('width')\n            : 0;\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position(date) {\n        if (!date || date === 'start') {\n            date = this.gantt_start;\n        } else if (date === 'today') {\n            return this.scroll_today();\n        } else if (typeof date === 'string') {\n            date = date_utils.parse(date);\n        }\n\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task =\n            date_utils.diff(date, this.gantt_start, 'hour') + 24;\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n        parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' });\n    }\n\n    scroll_today() {\n        this.set_scroll_position(new Date());\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            },\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let x_on_scroll_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n            bars.forEach((bar) => bar.group.classList.remove('active'));\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n            this.popup.parent.classList.add('hidden');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n        $.on(this.$container, 'scroll', (e) => {\n            let elements = document.querySelectorAll('.bar-wrapper');\n            let localBars = [];\n            const ids = [];\n            let dx;\n            if (x_on_scroll_start) {\n                dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n            }\n\n            const daysSinceStart =\n                ((e.currentTarget.scrollLeft / this.options.column_width) *\n                    this.options.step) /\n                24;\n            let format_str = 'D MMM';\n            if (['Year', 'Month'].includes(this.options.view_mode))\n                format_str = 'YYYY';\n            else if (['Day', 'Week'].includes(this.options.view_mode))\n                format_str = 'MMMM';\n            else if (this.view_is('Half Day')) format_str = 'D';\n            else if (this.view_is('Hour')) format_str = 'D MMMM';\n\n            let currentUpper = date_utils.format(\n                date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n                format_str,\n            );\n            const upperTexts = Array.from(\n                document.querySelectorAll('.upper-text'),\n            );\n            const $el = upperTexts.find(\n                (el) => el.textContent === currentUpper,\n            );\n            if ($el && !$el.classList.contains('current-upper')) {\n                const $current = document.querySelector('.current-upper');\n                if ($current) {\n                    $current.classList.remove('current-upper');\n                    $current.style.left =\n                        this.upper_texts_x[$current.textContent] + 'px';\n                    $current.style.top = this.options.header_height - 50 + 'px';\n                }\n\n                $el.classList.add('current-upper');\n                let dimensions = this.$svg.getBoundingClientRect();\n                $el.style.left =\n                    dimensions.x + this.$container.scrollLeft + 10 + 'px';\n                $el.style.top =\n                    dimensions.y + this.options.header_height - 50 + 'px';\n            }\n\n            Array.prototype.forEach.call(elements, function (el, i) {\n                ids.push(el.getAttribute('data-id'));\n            });\n\n            if (dx) {\n                localBars = ids.map((id) => this.get_bar(id));\n                if (this.options.auto_move_label) {\n                    localBars.forEach((bar) => {\n                        bar.update_label_position_on_horizontal_scroll({\n                            x: dx,\n                            sx: e.currentTarget.scrollLeft,\n                        });\n                    });\n                }\n            }\n\n            x_on_scroll_start = e.currentTarget.scrollLeft;\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging && !this.options.readonly) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n\n            $bar_progress.finaldx = 0;\n            bar.progress_changed();\n            bar.set_action_completed();\n            bar = null;\n            $bar_progress = null;\n            $bar = null;\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n        this.popup.parent.classList.remove('hidden');\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (this.options.popup === false) return;\n        if (!this.popup) {\n            this.popup = new Popup(this.$popup_wrapper, this.options.popup);\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        if (!this.tasks.length) return new Date();\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date,\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n        this.$header?.remove?.();\n        this.$current_highlight?.remove?.();\n        this.popup?.hide?.();\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","prepend","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","task_id","trigger_event","screenX","screenY","setTimeout","show_popup","offsetX","display","clearTimeout","popup","hide","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","_","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","Popup","parent","custom_html","make","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","DEFAULT_OPTIONS","view_modes","view_mode","date_format","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","parentElement","$popup_wrapper","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_highlights","make_grid_ticks","grid_width","grid_height","rows_layer","grid","row_width","row_height","row_y","$header","$upper_header","make_side_header","$side_header","$select","$el","selected","disabled","textContent","$option","$today_button","onclick","scroll_today","min","scrollLeft","tick_x","tick_y","tick_height","$lines_layer","x1","y1","x2","y2","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setMonth","setFullYear","$current_highlight","create_el","classes","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","scrollTo","behavior","unselect_all","hide_popup","is_dragging","x_on_start","x_on_scroll_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","Array","find","el","$current","dimensions","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","args","apply","get_oldest_starting_date","prev_date"],"mappings":"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"}